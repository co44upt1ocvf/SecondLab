<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="circusDataSet" targetNamespace="http://tempuri.org/circusDataSet.xsd" xmlns:mstns="http://tempuri.org/circusDataSet.xsd" xmlns="http://tempuri.org/circusDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="circusConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="circusConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SecondLab.Properties.Settings.GlobalReference.Default.circusConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="circus_eventsTableAdapter" GeneratorDataComponentClassName="circus_eventsTableAdapter" Name="circus_events" UserDataComponentName="circus_eventsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="circus.dbo.circus_events" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[circus_events] WHERE (([event_ID] = @Original_event_ID) AND ([title] = @Original_title) AND ([event_date] = @Original_event_date) AND ([price] = @Original_price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_event_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[circus_events] ([title], [event_date], [price]) VALUES (@title, @event_date, @price);
SELECT event_ID, title, event_date, price FROM circus_events WHERE (event_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@event_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT event_ID, title, event_date, price FROM dbo.circus_events</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[circus_events] SET [title] = @title, [event_date] = @event_date, [price] = @price WHERE (([event_ID] = @Original_event_ID) AND ([title] = @Original_title) AND ([event_date] = @Original_event_date) AND ([price] = @Original_price));
SELECT event_ID, title, event_date, price FROM circus_events WHERE (event_ID = @event_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@event_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_event_date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="event_ID" ColumnName="event_ID" DataSourceName="circus.dbo.circus_events" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@event_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="event_ID" DataSetColumn="event_ID" />
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="event_date" DataSetColumn="event_date" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM circus_events
WHERE        (event_ID = @Original_event_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_event_ID" ColumnName="event_ID" DataSourceName="circus.dbo.circus_events" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO circus_events
                         (title, event_date, price)
VALUES        (@title,@event_date,@price)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="title" ColumnName="title" DataSourceName="circus.dbo.circus_events" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="event_date" ColumnName="event_date" DataSourceName="circus.dbo.circus_events" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@event_date" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price" ColumnName="price" DataSourceName="circus.dbo.circus_events" DataTypeServer="decimal(10, 2)" DbType="Decimal" Direction="Input" ParameterName="@price" Precision="10" ProviderType="Decimal" Scale="2" Size="9" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       circus_events
SET                title = @title, event_date = @event_date, price = @price
WHERE        (event_ID = @Original_event_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="title" ColumnName="title" DataSourceName="circus.dbo.circus_events" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@title" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="event_date" ColumnName="event_date" DataSourceName="circus.dbo.circus_events" DataTypeServer="date" DbType="AnsiString" Direction="Input" ParameterName="@event_date" Precision="0" ProviderType="Date" Scale="0" Size="3" SourceColumn="event_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="price" ColumnName="price" DataSourceName="circus.dbo.circus_events" DataTypeServer="decimal(10, 2)" DbType="Decimal" Direction="Input" ParameterName="@price" Precision="10" ProviderType="Decimal" Scale="2" Size="9" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_event_ID" ColumnName="event_ID" DataSourceName="circus.dbo.circus_events" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="customersTableAdapter" GeneratorDataComponentClassName="customersTableAdapter" Name="customers" UserDataComponentName="customersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="circus.dbo.customers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[customers] WHERE (([customer_ID] = @Original_customer_ID) AND ([firstname] = @Original_firstname) AND ([surnamre] = @Original_surnamre) AND ([email] = @Original_email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[customers] ([firstname], [surnamre], [email]) VALUES (@firstname, @surnamre, @email);
SELECT customer_ID, firstname, surnamre, email FROM customers WHERE (customer_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT customer_ID, firstname, surnamre, email FROM dbo.customers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[customers] SET [firstname] = @firstname, [surnamre] = @surnamre, [email] = @email WHERE (([customer_ID] = @Original_customer_ID) AND ([firstname] = @Original_firstname) AND ([surnamre] = @Original_surnamre) AND ([email] = @Original_email));
SELECT customer_ID, firstname, surnamre, email FROM customers WHERE (customer_ID = @customer_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="customer_ID" ColumnName="customer_ID" DataSourceName="circus.dbo.customers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="customer_ID" DataSetColumn="customer_ID" />
              <Mapping SourceColumn="firstname" DataSetColumn="firstname" />
              <Mapping SourceColumn="surnamre" DataSetColumn="surnamre" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM customers
WHERE        (customer_ID = @Original_customer_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_customer_ID" ColumnName="customer_ID" DataSourceName="circus.dbo.customers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO customers
                         (firstname, surnamre, email)
VALUES        (@firstname,@surnamre,@email)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="firstname" ColumnName="firstname" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="surnamre" ColumnName="surnamre" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="email" ColumnName="email" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateQuery" Modifier="Public" Name="UpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       customers
SET                firstname = @firstname, surnamre = @surnamre, email = @email
WHERE        (customer_ID = @Original_customer_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="firstname" ColumnName="firstname" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@firstname" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="firstname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="surnamre" ColumnName="surnamre" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@surnamre" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="surnamre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="email" ColumnName="email" DataSourceName="circus.dbo.customers" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_customer_ID" ColumnName="customer_ID" DataSourceName="circus.dbo.customers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ticketsTableAdapter" GeneratorDataComponentClassName="ticketsTableAdapter" Name="tickets" UserDataComponentName="ticketsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="circusConnectionString (Settings)" DbObjectName="circus.dbo.tickets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tickets] WHERE (([ticket_ID] = @Original_ticket_ID) AND ((@IsNull_event_ID = 1 AND [event_ID] IS NULL) OR ([event_ID] = @Original_event_ID)) AND ((@IsNull_customer_ID = 1 AND [customer_ID] IS NULL) OR ([customer_ID] = @Original_customer_ID)) AND ([quantity] = @Original_quantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tickets] ([event_ID], [customer_ID], [quantity]) VALUES (@event_ID, @customer_ID, @quantity);
SELECT ticket_ID, event_ID, customer_ID, quantity FROM tickets WHERE (ticket_ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ticket_ID, event_ID, customer_ID, quantity FROM dbo.tickets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tickets] SET [event_ID] = @event_ID, [customer_ID] = @customer_ID, [quantity] = @quantity WHERE (([ticket_ID] = @Original_ticket_ID) AND ((@IsNull_event_ID = 1 AND [event_ID] IS NULL) OR ([event_ID] = @Original_event_ID)) AND ((@IsNull_customer_ID = 1 AND [customer_ID] IS NULL) OR ([customer_ID] = @Original_customer_ID)) AND ([quantity] = @Original_quantity));
SELECT ticket_ID, event_ID, customer_ID, quantity FROM tickets WHERE (ticket_ID = @ticket_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_event_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="event_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customer_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customer_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ticket_ID" ColumnName="ticket_ID" DataSourceName="circus.dbo.tickets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ticket_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ticket_ID" DataSetColumn="ticket_ID" />
              <Mapping SourceColumn="event_ID" DataSetColumn="event_ID" />
              <Mapping SourceColumn="customer_ID" DataSetColumn="customer_ID" />
              <Mapping SourceColumn="quantity" DataSetColumn="quantity" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="circusDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="circusDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="circusDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="circus_events" msprop:Generator_RowClassName="circus_eventsRow" msprop:Generator_RowEvHandlerName="circus_eventsRowChangeEventHandler" msprop:Generator_RowDeletedName="circus_eventsRowDeleted" msprop:Generator_RowDeletingName="circus_eventsRowDeleting" msprop:Generator_RowEvArgName="circus_eventsRowChangeEvent" msprop:Generator_TablePropName="circus_events" msprop:Generator_RowChangedName="circus_eventsRowChanged" msprop:Generator_UserTableName="circus_events" msprop:Generator_RowChangingName="circus_eventsRowChanging" msprop:Generator_TableClassName="circus_eventsDataTable" msprop:Generator_TableVarName="tablecircus_events">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="event_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="event_ID" msprop:Generator_ColumnPropNameInTable="event_IDColumn" msprop:Generator_ColumnPropNameInRow="event_ID" msprop:Generator_ColumnVarNameInTable="columnevent_ID" type="xs:int" />
              <xs:element name="title" msprop:Generator_UserColumnName="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnVarNameInTable="columntitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="event_date" msprop:Generator_UserColumnName="event_date" msprop:Generator_ColumnPropNameInTable="event_dateColumn" msprop:Generator_ColumnPropNameInRow="event_date" msprop:Generator_ColumnVarNameInTable="columnevent_date" type="xs:dateTime" />
              <xs:element name="price" msprop:Generator_UserColumnName="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnVarNameInTable="columnprice" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="customers" msprop:Generator_RowClassName="customersRow" msprop:Generator_RowEvHandlerName="customersRowChangeEventHandler" msprop:Generator_RowDeletedName="customersRowDeleted" msprop:Generator_RowDeletingName="customersRowDeleting" msprop:Generator_RowEvArgName="customersRowChangeEvent" msprop:Generator_TablePropName="customers" msprop:Generator_RowChangedName="customersRowChanged" msprop:Generator_UserTableName="customers" msprop:Generator_RowChangingName="customersRowChanging" msprop:Generator_TableClassName="customersDataTable" msprop:Generator_TableVarName="tablecustomers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="customer_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="customer_ID" msprop:Generator_ColumnPropNameInTable="customer_IDColumn" msprop:Generator_ColumnPropNameInRow="customer_ID" msprop:Generator_ColumnVarNameInTable="columncustomer_ID" type="xs:int" />
              <xs:element name="firstname" msprop:Generator_UserColumnName="firstname" msprop:Generator_ColumnPropNameInTable="firstnameColumn" msprop:Generator_ColumnPropNameInRow="firstname" msprop:Generator_ColumnVarNameInTable="columnfirstname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="surnamre" msprop:Generator_UserColumnName="surnamre" msprop:Generator_ColumnPropNameInTable="surnamreColumn" msprop:Generator_ColumnPropNameInRow="surnamre" msprop:Generator_ColumnVarNameInTable="columnsurnamre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_UserColumnName="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnVarNameInTable="columnemail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tickets" msprop:Generator_RowClassName="ticketsRow" msprop:Generator_RowEvHandlerName="ticketsRowChangeEventHandler" msprop:Generator_RowDeletedName="ticketsRowDeleted" msprop:Generator_RowDeletingName="ticketsRowDeleting" msprop:Generator_RowEvArgName="ticketsRowChangeEvent" msprop:Generator_TablePropName="tickets" msprop:Generator_RowChangedName="ticketsRowChanged" msprop:Generator_UserTableName="tickets" msprop:Generator_RowChangingName="ticketsRowChanging" msprop:Generator_TableClassName="ticketsDataTable" msprop:Generator_TableVarName="tabletickets">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ticket_ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ticket_ID" msprop:Generator_ColumnPropNameInTable="ticket_IDColumn" msprop:Generator_ColumnPropNameInRow="ticket_ID" msprop:Generator_ColumnVarNameInTable="columnticket_ID" type="xs:int" />
              <xs:element name="event_ID" msprop:Generator_UserColumnName="event_ID" msprop:Generator_ColumnPropNameInTable="event_IDColumn" msprop:Generator_ColumnPropNameInRow="event_ID" msprop:Generator_ColumnVarNameInTable="columnevent_ID" type="xs:int" minOccurs="0" />
              <xs:element name="customer_ID" msprop:Generator_UserColumnName="customer_ID" msprop:Generator_ColumnPropNameInTable="customer_IDColumn" msprop:Generator_ColumnPropNameInRow="customer_ID" msprop:Generator_ColumnVarNameInTable="columncustomer_ID" type="xs:int" minOccurs="0" />
              <xs:element name="quantity" msprop:Generator_UserColumnName="quantity" msprop:Generator_ColumnPropNameInTable="quantityColumn" msprop:Generator_ColumnPropNameInRow="quantity" msprop:Generator_ColumnVarNameInTable="columnquantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:circus_events" />
      <xs:field xpath="mstns:event_ID" />
    </xs:unique>
    <xs:unique name="customers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:customers" />
      <xs:field xpath="mstns:customer_ID" />
    </xs:unique>
    <xs:unique name="tickets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tickets" />
      <xs:field xpath="mstns:ticket_ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__tickets__custome__3F466844" msdata:parent="customers" msdata:child="tickets" msdata:parentkey="customer_ID" msdata:childkey="customer_ID" msprop:Generator_UserParentTable="customers" msprop:Generator_UserChildTable="tickets" msprop:Generator_RelationVarName="relationFK__tickets__custome__3F466844" msprop:Generator_ChildPropName="GetticketsRows" msprop:Generator_UserRelationName="FK__tickets__custome__3F466844" msprop:Generator_ParentPropName="customersRow" />
      <msdata:Relationship name="FK__tickets__event_I__3E52440B" msdata:parent="circus_events" msdata:child="tickets" msdata:parentkey="event_ID" msdata:childkey="event_ID" msprop:Generator_UserParentTable="circus_events" msprop:Generator_UserChildTable="tickets" msprop:Generator_RelationVarName="relationFK__tickets__event_I__3E52440B" msprop:Generator_ChildPropName="GetticketsRows" msprop:Generator_UserRelationName="FK__tickets__event_I__3E52440B" msprop:Generator_ParentPropName="circus_eventsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>